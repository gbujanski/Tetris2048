var m=Object.defineProperty;var b=(r,t,e)=>t in r?m(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var n=(r,t,e)=>b(r,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function e(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(i){if(i.ep)return;i.ep=!0;const o=e(i);fetch(i.href,o)}})();const u=r=>r<4?{bg:"#776e65",text:"#000"}:r<8?{bg:"#eee4da",text:"#000"}:r<16?{bg:"#ede0c8",text:"#000"}:r<32?{bg:"#f2b179",text:"#000"}:r<64?{bg:"#f59563",text:"#000"}:r<128?{bg:"#f67c5f",text:"#000"}:r<256?{bg:"#f65e3b",text:"#000"}:r<512?{bg:"#edcf72",text:"#000"}:r<1024?{bg:"#edcc61",text:"#000"}:r<2048?{bg:"#edc850",text:"#000"}:r<4096?{bg:"#e8b026",text:"#000"}:r<8192?{bg:"#a86ae4",text:"#000"}:r<16384?{bg:"#6b4fc4",text:"#ffffff"}:r<32768?{bg:"#3c3a32",text:"#ffffff"}:r<65536?{bg:"#2b2b2b",text:"#ffffff"}:r<131072?{bg:"#1e1b2e",text:"#ffffff"}:r<262144?{bg:"#291b1b",text:"#ffffff"}:r<524288?{bg:"#1e2d1e",text:"#ffffff"}:r<1048576?{bg:"#2e1e2d",text:"#ffffff"}:r<2097152?{bg:"#1c1c2e",text:"#ffffff"}:r<4194304?{bg:"#2e2c1c",text:"#ffffff"}:r<8388608?{bg:"#1f1f1f",text:"#ffffff"}:r<16777216?{bg:"#181818",text:"#ffffff"}:r<33554432?{bg:"#141414",text:"#ffffff"}:r<67108864?{bg:"#101010",text:"#ffffff"}:r<134217728?{bg:"#0d0d0d",text:"#ffffff"}:r<268435456?{bg:"#0a0a0a",text:"#ffffff"}:r<536870912?{bg:"#070707",text:"#ffffff"}:r<1073741824?{bg:"#050505",text:"#ffffff"}:{bg:"#030303",text:"#ffffff"};class d{constructor(t=0){n(this,"_value");this._value=t}get color(){return u(this.value)}get value(){return this._value}set value(t){this._value=t}}const l={Add:"add",Move:"move",Merge:"merge"},c=class c{constructor(){n(this,"state");n(this,"listeners");this.state=new Map,this.listeners=new Map,this.loadStateFromLocalStorage()}static getInstance(){return c._instance||(c._instance=new c),c._instance}set(t,e){const s=this.state.get(t);this.state.set(t,e),this.saveStateToLocalStorage();const i=this.listeners.get(t);i&&i.forEach(o=>o(e,s))}get(t){return this.state.get(t)}has(t){return this.state.has(t)}delete(t){const e=this.state.delete(t);return this.saveStateToLocalStorage(),this.listeners.delete(t),e}clear(){this.state.clear(),this.listeners.clear(),localStorage.removeItem("appState")}subscribe(t,e){this.listeners.has(t)||this.listeners.set(t,new Set);const s=this.listeners.get(t);return s.add(e),()=>s.delete(e)}saveStateToLocalStorage(){localStorage.setItem("appState",JSON.stringify(Array.from(this.state.entries())))}loadStateFromLocalStorage(){const t=localStorage.getItem("appState");t&&(this.state=new Map(JSON.parse(t)))}};n(c,"_instance");let h=c;class T{constructor(t,e){n(this,"state",h.getInstance());n(this,"_tiles");n(this,"boardActions",[]);n(this,"tilesToCheckInNextStep",[]);n(this,"colsToUpdate",[]);this.state.has("board")?this._tiles=this.generateBoardFromState():this._tiles=this.generateEmptyBoard(t,e)}get tiles(){return this._tiles}reset(){this._tiles.forEach(t=>t.forEach(e=>e.value=0))}addTile(t,e){const{row:s,col:i}=t;if(this.boardActions=[],s<0||s>=this._tiles.length||i<0||i>=this._tiles[s].length)throw new Error("Index out of bounds");if(e<0)throw new Error("Value cannot be negative");const o=this.getIndexOfLastFilledTileInColumn(i);return o===-1?this.updateTileData({action:l.Add,to:{row:0,col:i},value:e}):o===this._tiles.length-1?this._tiles[o][i].value==e&&this.updateTileData({action:l.Merge,from:{row:o,col:i},to:{row:o,col:i},value:e*2}):this.updateTileData({action:l.Add,to:{row:o+1,col:i},value:e}),this.checkForMerge(),this.state.set("board",this._tiles.map(a=>a.map(f=>f.value))),this.boardActions}isTopTileHaveSameValue(t){const{row:e,col:s}=t;return e===0?!1:this._tiles[e-1][s].value===this._tiles[e][s].value}isLeftTileHaveSameValue(t){const{row:e,col:s}=t;return s===0?!1:this._tiles[e][s-1].value===this._tiles[e][s].value}isRightTileHaveSameValue(t){const{row:e,col:s}=t;return s===this._tiles[e].length-1?!1:this._tiles[e][s+1].value===this._tiles[e][s].value}isBottomTileHaveSameValue(t){const{row:e,col:s}=t;return e===this._tiles.length-1?!1:this._tiles[e+1][s].value===this._tiles[e][s].value}getIndexOfLastFilledTileInColumn(t){for(let e=this._tiles.length-1;e>=0;e--)if(this._tiles[e][t].value!==0)return e;return-1}updateTileData(t){this.boardActions.push({...t}),t.action===l.Move&&(this._tiles[t.to.row][t.to.col].value=this._tiles[t.from.row][t.from.col].value),t.action!==l.Move&&(this._tiles[t.to.row][t.to.col].value=t.value),t.action!==l.Add&&(this._tiles[t.from.row][t.from.col].value=0),this.tilesToCheckInNextStep.push(t.to)}checkForMerge(){if(this.tilesToCheckInNextStep.length===0)return;const t=[...this.tilesToCheckInNextStep];this.tilesToCheckInNextStep=[],t.forEach(e=>{const{row:s,col:i}=e;this._tiles[s][i].value!==0&&(this.isTopTileHaveSameValue(e)?(this.updateTileData({action:l.Merge,to:{row:s-1,col:i},value:this._tiles[s][i].value*2,from:e}),this.colsToUpdate.push(i)):this.isLeftTileHaveSameValue(e)?(this.updateTileData({action:l.Merge,to:{row:s,col:i-1},value:this._tiles[s][i].value*2,from:e}),this.colsToUpdate.push(i)):this.isRightTileHaveSameValue(e)?(this.updateTileData({action:l.Merge,to:e,value:this._tiles[s][i].value*2,from:{row:s,col:i+1}}),this.colsToUpdate.push(i+1)):this.isBottomTileHaveSameValue(e)&&(this.updateTileData({action:l.Merge,to:{row:s+1,col:i},value:this._tiles[s][i].value*2,from:e}),this.colsToUpdate.push(i)))}),this.moveTileIfTopTileIsEmpty()}moveTileIfTopTileIsEmpty(){if(this.colsToUpdate.length===0){this.checkForMerge();return}this.colsToUpdate.forEach(t=>{this._tiles.forEach((e,s)=>{s>0&&this._tiles[s-1][t].value===0&&this.updateTileData({action:l.Move,to:{row:s-1,col:t},from:{row:s,col:t}})})}),this.colsToUpdate=[],this.checkForMerge()}generateBoardFromState(){return this.state.get("board").map(e=>e.map(s=>new d(s)))}generateEmptyBoard(t,e){const s=Array.from({length:e},()=>Array.from({length:t},()=>new d(0)));return this.state.set("board",s.map(i=>i.map(o=>o.value))),s}}class x{constructor(t,e){n(this,"_board");n(this,"_boardEl");this._board=t,this._boardEl=e,this.generateBoardStructure()}async updateBoard(t){for(const e of t)switch(e.action){case l.Add:this.addTile(e);break;case l.Move:await this.editTile(e);break;case l.Merge:await this.editTile(e);break}}reset(){this._boardEl.innerHTML="",this.generateBoardStructure()}addTile(t){const e=this._boardEl.children[t.to.row].children[t.to.col],s=new d(t.value);e.textContent=s.value.toString(),e.style.backgroundColor=s.color.bg,e.style.color=s.color.text}async editTile(t){const e=this._boardEl.children[t.from.row].children[t.from.col],s=this._boardEl.children[t.to.row].children[t.to.col],i=e.textContent;if(e.textContent!==""){const o=e.cloneNode(!0),a=s.getBoundingClientRect(),f=e.getBoundingClientRect();o.style.left=`${f.left}px`,o.style.top=`${f.top}px`,o.style.position="absolute",o.style.zIndex="1000",o.style.transition="left 0.3s ease, top 0.3s ease",this._boardEl.appendChild(o),o.getBoundingClientRect(),o.style.left=`${a.left}px`,o.style.top=`${a.top}px`,e.textContent="",e.style.backgroundColor="",await new Promise(p=>setTimeout(p,300)),o.remove()}if(s.textContent=t.action===l.Move?i:t.value.toString(),s.textContent){const o=u(parseInt(s.textContent));s.style.backgroundColor=o.bg,s.style.color=o.text}}generateBoardStructure(){this._board.tiles.forEach((t,e)=>{const s=document.createElement("div");s.className="row",s.dataset.row=e.toString(),t.forEach((i,o)=>{const a=document.createElement("div");if(a.className="tile",a.dataset.col=o.toString(),i.value!==0){const f=new d(i.value);a.textContent=f.value.toString(),a.style.backgroundColor=f.color.bg,a.style.color=f.color.text}s.appendChild(a)}),this._boardEl.appendChild(s)})}}class E{constructor(){n(this,"nextTileEl");n(this,"state",h.getInstance());this.nextTileEl=document.getElementById("next-tile"),this.updateNextTileDisplay(),this.subscribeForFutureChanges()}subscribeForFutureChanges(){this.state.subscribe("board",()=>{this.updateNextTileDisplay()})}updateNextTileDisplay(){const t=this.getNextTileValue();this.state.set("nextTile",t);const e=new d(t);this.nextTileEl.textContent=e.value.toString(),this.nextTileEl.style.backgroundColor=e.color.bg,this.nextTileEl.style.color=e.color.text}getNextTileValue(){const t=this.getLog2FromHighestTile(),e=this.generateNextRandomPowerOfTwo(t);return Math.pow(2,e)}getLog2FromHighestTile(){const t=this.state.get("board"),e=Math.max(...t.flat());return Math.log2(e)}generateNextRandomPowerOfTwo(t){let e;return t-5<-3?e=1:t-5<0?e=Math.ceil(Math.random()*2):e=Math.ceil(Math.random()*(t-4)),e}}class w{constructor(t,e){n(this,"board");n(this,"renderer");n(this,"state",h.getInstance());this.board=t,this.renderer=e,this.subscribeForFutureChanges()}addTile(t,e){const s=this.board.addTile(t,e);this.renderer.updateBoard(s)}subscribeForFutureChanges(){this.state.subscribe("dropTarget",t=>{var o;const e=t.dataset.col?parseInt(t.dataset.col):0,s=(o=t.parentElement)!=null&&o.dataset.row?parseInt(t.parentElement.dataset.row):0,i=parseInt(this.state.get("nextTile"));this.addTile({row:s,col:e},i)})}}class v{constructor(){n(this,"state",h.getInstance());n(this,"dragEl");n(this,"ghostEl",null);n(this,"onPointerDown",t=>{t.preventDefault(),this.state.set("dragging",!0),this.createGhostElement(t.clientX,t.clientY),document.addEventListener("pointermove",this.onPointerMove),document.addEventListener("pointerup",this.onPointerUp)});n(this,"onPointerMove",t=>{!this.state.get("dragging")||!this.ghostEl||this.setGhostElementPosition(t.clientX,t.clientY)});n(this,"onPointerUp",t=>{if(!this.state.get("dragging"))return;this.state.set("dragging",!1);const e=document.elementFromPoint(t.clientX,t.clientY),s=e==null?void 0:e.closest(".tile");s&&this.state.set("dropTarget",s),this.ghostEl.remove(),this.ghostEl=null,document.removeEventListener("pointermove",this.onPointerMove),document.removeEventListener("pointerup",this.onPointerUp)});this.dragEl=document.getElementById("next-tile"),this.dragEl.style.touchAction="none",this.dragEl.addEventListener("pointerdown",this.onPointerDown)}createGhostElement(t,e){this.ghostEl||(this.ghostEl=this.dragEl.cloneNode(!0),this.ghostEl.classList.add("dragging"),this.setGhostElementPosition(t,e),document.body.appendChild(this.ghostEl))}setGhostElementPosition(t,e){this.ghostEl&&(this.ghostEl.style.left=`${t-50}px`,this.ghostEl.style.top=`${e-50}px`)}}const _=document.getElementById("board"),S=5,y=8,g=new T(S,y),C=new x(g,_);new w(g,C);new E;new v;
